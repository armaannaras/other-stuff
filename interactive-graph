import pandas as pd
import numpy as np
import math

np.random.seed(12345)

df = pd.DataFrame([np.random.normal(32000,200000,3650), 
                   np.random.normal(43000,100000,3650), 
                   np.random.normal(43500,140000,3650), 
                   np.random.normal(48000,70000,3650)], 
                  index=[1992,1993,1994,1995])


import matplotlib.pyplot as plt
import numpy as np
get_ipython().magic('matplotlib notebook')

mean = df.mean(axis=1)
sd = df.std(axis=1)
#z value for 95% CI is 1.96
ci = 1.96*(sd/math.sqrt(len(df.columns)))
barlist = plt.bar(range(len(df.index)), mean, yerr = ci, width = 0.5)
plt.xticks(range(len(df.index)), df.index)
plt.gca().spines['top'].set_visible(False)
plt.gca().spines['right'].set_visible(False)

_ =plt.xlabel("Year", fontsize = 20)

def onclick(event):
    plt.gca().set_title('Selected value of {}'.format(event.ydata))
    yinput = event.ydata
    for i in range(len(mean)):
        if yinput > mean.iloc[i]+ci.iloc[i]:
            if yinput < (mean.iloc[i]+ci.iloc[i])*1.125:
                barlist[i].set_color("#74C8F8")
            elif yinput > (mean.iloc[i]+ci.iloc[i])*1.25:
                barlist[i].set_color("#0003B4")
            else: barlist[i].set_color("#367BFA")
        elif yinput < mean.iloc[i]-ci.iloc[i]:
            if yinput > (mean.iloc[i]-ci.iloc[i])/1.125:
                barlist[i].set_color("#F16464")
            elif yinput > (mean.iloc[i]-ci.iloc[i])/1.25:
                barlist[i].set_color("#FF1E1E")
            else: barlist[i].set_color("#900C3F")      
        else:
            barlist[i].set_color("white")
        barlist[i].set_edgecolor("black")
        
_ =plt.gcf().canvas.mpl_connect('button_press_event', onclick)
