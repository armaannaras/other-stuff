import matplotlib.pyplot as plt
import mplleaflet
import pandas as pd
import numpy as np

df = pd.read_csv(BinSize_d400.csv') #Binsize file

station_locations_by_hash = df[df['hash'] == 'fb441e62df2d58994928907a91895ec62c2c42e6cd075c2700843b89']

lons = station_locations_by_hash['LONGITUDE'].tolist()
lats = station_locations_by_hash['LATITUDE'].tolist()

plt.figure(figsize=(8,8))

plt.scatter(lons, lats, c='r', alpha=0.7, s=200)

mplleaflet.display()


df = pd.read_csv("fb441e62df2d58994928907a91895ec62c2c42e6cd075c2700843b89.csv") #Ann Arbor Data file
df["Data_Value"] = df["Data_Value"]/10
df["Year"] = df["Date"].apply(lambda x: x[:4])
df["Date"] = df["Date"].apply(lambda x: x[5:])
df = df[df["Date"] != "02-29"]
df15 = df[df["Year"] == "2015"]
df = df[df["Year"] != "2015"]
dfmax = df.groupby("Date").agg({'Data_Value':np.max})
dfmin = df.groupby("Date").agg({'Data_Value':np.min})
df15max = df15.groupby("Date").agg({'Data_Value':np.max})
df15min = df15.groupby("Date").agg({'Data_Value':np.min})
newmax = dfmax.reset_index().merge(df15max.reset_index(), on = "Date")
newmin = dfmin.reset_index().merge(df15min.reset_index(), on = "Date")
newmax = newmax[newmax["Data_Value_y"]> newmax["Data_Value_x"]]
newmin = newmin[newmin["Data_Value_y"]< newmin["Data_Value_x"]]

plt.figure()
plt.figure(figsize=(18,10))
x = range(len(dfmax))
y1 = dfmax.values.reshape(len(dfmax.values))
y2 = dfmin.values.reshape(len(dfmin.values))
plt.plot(y1, "-", c = "#FF5733", label = "Highs")
plt.plot(y2, "-", c = "#5CC3FE", label = "Lows")

plt.gca().fill_between(x, y1, y2, facecolor='#ADD7F0', alpha=0.4)
x2 = newmax.index
y3 = newmax["Data_Value_y"].values
y3 = y3.reshape(len(y3))
x3 = newmin.index
y4 = newmin["Data_Value_y"].values
y4 = y4.reshape(len(y4))
plt.scatter(x2, y3, c = "#F164B3", label = "2015 Highs")
plt.scatter(x3, y4, c = "black", label = "2015 Lows")

plt.xlabel("Day", fontsize=20)
plt.ylabel("Celsius Values", fontsize=20)
plt.title("2015 Record Temps in Ann Arbor", fontsize=25)
plt.legend(fontsize = 15, frameon = False)
plt.gca().spines["top"].set_visible(False)
plt.gca().spines["right"].set_visible(False)
ticks = (dfmax.index[-50], dfmax.index[0], dfmax.index[50],dfmax.index[100],dfmax.index[150],dfmax.index[200],dfmax.index[250], dfmax.index[300], dfmax.index[350])
plt.gca().set_xticklabels(ticks)
plt.show()
